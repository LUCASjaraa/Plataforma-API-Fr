@use "sass:color";
@use "sass:meta";
@use "sass:string";
@use "../variables/bootstrap-material-design";
@use "../variables/bootstrap-material-design-base";
@use "../variables/brand";
@use "../variables/colors";

@use "sass:math";

@function calc-top($line-height-base, $font-size, $component-height) {
  @return math.div(
    (($line-height-base * $font-size) - $component-height),
    2
  ); // vertical center of line-height
}

// Emulate the less #contrast function
// TODO: this may be useful for the inverse theme, but if not, remove (it is unused after the removal of fullpalette)
// contrast-color and brightness borrowed from compass
// Copyright (c) 2009-2014 Christopher M. Eppstein
// Complies with license: https://github.com/Compass/compass/blob/stable/LICENSE.markdown
@function contrast-color(
  $color,
  $dark: $contrasted-dark-default,
  $light: $contrasted-light-default,
  $threshold: null
) {
  @if $threshold {
    // Deprecated in Compass 0.13
    @warn "The $threshold argment to contrast-color is no longer needed and will be removed in the next release.";
  }

  @if $color == null {
    @return null;
  } @else {
    $color-brightness: brightness($color);
    $dark-text-brightness: brightness($dark);
    $light-text-brightness: brightness($light);
    @return if(
      math.abs($color-brightness - $light-text-brightness) >
        math.abs($color-brightness - $dark-text-brightness),
      $light,
      $dark
    );
  }
}

@function brightness($color) {
  @if meta.type-of($color) == color {
    @return math.div(
        (
          color.red($color) * 0.299 + color.green($color) * 0.587 +
            color.blue($color) * 0.114
        ),
        255
      ) * 100%;
  } @else {
    @return string.unquote("brightness(#{$color})");
  }
}

@mixin linear-gradient($color1, $color2) {
  background: $color1; /* For browsers that do not support gradients */
  background: -webkit-linear-gradient(
    60deg,
    $color1,
    $color2
  ); /* For Safari 5.1 to 6.0 */
  background: -o-linear-gradient(
    60deg,
    $color1,
    $color2
  ); /* For Opera 11.1 to 12.0 */
  background: -moz-linear-gradient(
    60deg,
    $color1,
    $color2
  ); /* For Firefox 3.6 to 15 */
  background: linear-gradient(60deg, $color1, $color2); /* Standard syntax */
}

@mixin badges-color($color) {
  .tag {
    background-color: $color;
    color: colors.$white-color;

    .tagsinput-remove-link {
      color: colors.$white-color;
    }
  }
  // .tagsinput-add{
  //     color: $color;
  // }
}
@mixin create-colored-badges() {
  &.primary-badge {
    @include badges-color(brand.$brand-primary);
  }
  &.info-badge {
    @include badges-color(brand.$brand-info);
  }
  &.success-badge {
    @include badges-color(brand.$brand-success);
  }
  &.warning-badge {
    @include badges-color(brand.$brand-warning);
  }
  &.danger-badge {
    @include badges-color(brand.$brand-danger);
  }
  &.rose-badge {
    @include badges-color(brand.$brand-rose);
  }
}

@mixin badge-color() {
  &.badge-primary {
    background-color: brand.$brand-primary;
  }
  &.badge-info {
    background-color: brand.$brand-info;
  }
  &.badge-success {
    background-color: brand.$brand-success;
  }
  &.badge-warning {
    background-color: brand.$brand-warning;
  }
  &.badge-danger {
    background-color: brand.$brand-danger;
  }
  &.badge-rose {
    background-color: brand.$brand-rose;
  }
  &.badge-default {
    background-color: colors.$gray-light;
  }
}
