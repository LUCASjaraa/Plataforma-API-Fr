@use "sass:string";
@use "~bootstrap/scss/bootstrap";
@use "mixins/forms";
@use "variables/bootstrap-material-design";
@use "variables/bootstrap-material-design-base";
@use "variables/colors";

.form-check {
  margin-bottom: 0.5rem;
  padding-left: 0;

  .form-check-label {
    cursor: pointer;
    padding-left: 0; // Reset for Bootstrap rule
    // color: $mdb-checkbox-label-color;
    @include forms.mdb-label-color-toggle-focus();
  }

  // Hide native checkbox
  .form-check-input {
    opacity: 0;
    position: absolute;
    margin: 0;
    z-index: -1;
    width: 0;
    height: 0;
    overflow: hidden;
    left: 0;
    pointer-events: none;

    &:focus + .form-check-sign .check:after {
      opacity: 0.2;
    }

    &:checked {
      & + .form-check-sign .check {
        background: bootstrap-material-design.$mdb-checkbox-checked-color;
      }

      & + .form-check-sign .check:before {
        color: #ffffff;
        box-shadow: 0 0 0 10px, 10px -10px 0 10px, 32px 0 0 20px,
          0px 32px 0 20px, -5px 5px 0 10px, 20px -12px 0 11px;
        @include forms.animation(
          checkbox-on bootstrap-material-design.$mdb-checkbox-animation-check
            forwards
        );
      }

      & + .form-check-sign:before {
        @include forms.animation(
          rippleOn bootstrap-material-design.$mdb-checkbox-animation-ripple
        );
      }

      & + .form-check-sign .check:after {
        //background-color: $brand-success; // FIXME: seems like tho wrong color, test and make sure it can be removed
        @include forms.animation(
          rippleOn bootstrap-material-design.$mdb-checkbox-animation-ripple
            forwards
        );
      }
    }

    &:not(:checked) {
      & + .form-check-sign:before {
        @include forms.animation(
          rippleOff bootstrap-material-design.$mdb-checkbox-animation-ripple
        );
      }

      & + .form-check-sign .check:after {
        @include forms.animation(
          rippleOff bootstrap-material-design.$mdb-checkbox-animation-ripple
        ); // Ripple effect on uncheck
      }
    }
  }

  .form-check-sign {
    vertical-align: middle;
    position: relative;
    top: -2px;
    float: left;
    padding-right: 10px;
    // display: inline-block;

    &:before {
      display: block;
      position: absolute;
      left: 0;
      content: "";
      background-color: rgba(0, 0, 0, 0.84);
      height: bootstrap-material-design.$mdb-checkbox-size;
      width: bootstrap-material-design.$mdb-checkbox-size;
      border-radius: 100%;
      z-index: 1;
      opacity: 0;
      margin: 0;
      top: 0;
      @include forms.transform-scale3d(string.unquote("2.3,2.3,1"));
    }

    .check {
      position: relative;
      display: inline-block;
      width: bootstrap-material-design.$mdb-checkbox-size;
      height: bootstrap-material-design.$mdb-checkbox-size;
      border: 1px solid bootstrap-material-design.$mdb-checkbox-border-color;
      overflow: hidden;
      z-index: 1;
      border-radius: bootstrap-material-design.$border-radius-base;

      &:before {
        position: absolute;
        content: "";
        transform: rotate(45deg);
        display: block;
        margin-top: -3px;
        margin-left: 7px;
        width: 0;
        color: colors.$white-color;
        height: 0;
        box-shadow: 0 0 0 0, 0 0 0 0, 0 0 0 0, 0 0 0 0, 0 0 0 0, 0 0 0 0,
          0 0 0 0 inset;
        @include forms.animation(
          checkbox-off bootstrap-material-design.$mdb-checkbox-animation-check
            forwards
        );
      }
    }
  }

  .rtl {
    .form-check {
      .form-check-sign {
        .check::before {
          margin-right: 10px;
        }
      }
    }
  }

  // Style for disabled inputs
  fieldset[disabled] &,
  fieldset[disabled] & .form-check-input,
  .form-check-input[disabled] ~ .form-check-sign .check,
  .form-check-input[disabled] + .circle {
    opacity: 0.5;
  }

  .form-check-input[disabled] ~ .form-check-sign .check {
    border-color: #000000;
    opacity: 0.26;
  }

  .form-check-input[disabled] + .form-check-sign .check:after {
    background-color: bootstrap-material-design-base.$mdb-text-color-primary;
    transform: rotate(-45deg);
  }

  .form-check-input[disabled][checked] + .form-check-sign .check {
    background-color: bootstrap.$black;
  }
}

@keyframes checkbox-on {
  0% {
    box-shadow: 0 0 0 10px, 10px -10px 0 10px, 32px 0 0 20px, 0px 32px 0 20px,
      -5px 5px 0 10px, 15px 2px 0 11px;
  }
  50% {
    box-shadow: 0 0 0 10px, 10px -10px 0 10px, 32px 0 0 20px, 0px 32px 0 20px,
      -5px 5px 0 10px, 20px 2px 0 11px;
  }
  100% {
    box-shadow: 0 0 0 10px, 10px -10px 0 10px, 32px 0 0 20px, 0px 32px 0 20px,
      -5px 5px 0 10px, 20px -12px 0 11px;
  }
}

@keyframes rippleOn {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 0.2;
  }
  100% {
    opacity: 0;
  }
}
@keyframes rippleOff {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 0.2;
  }
  100% {
    opacity: 0;
  }
}

.mat-checkbox {
  .mat-checkbox-layout {
    .mat-checkbox-inner-container {
      height: bootstrap-material-design.$mdb-checkbox-size;
      width: bootstrap-material-design.$mdb-checkbox-size;
      .mat-checkbox-frame {
        border-width: 1px;
        border-color: bootstrap-material-design.$mdb-checkbox-border-color;
      }
      .mat-checkbox-background {
        background: bootstrap-material-design.$transparent;
      }
      .mat-checkbox-checkmark-path {
        background: bootstrap-material-design.$mdb-checkbox-checked-color;
        stroke: bootstrap-material-design.$mdb-checkbox-checked-color !important;
      }
    }
  }
  &.mb-0 {
    .mat-checkbox-layout {
      margin-bottom: 0;
    }
  }
  &.mat-checkbox-disabled {
    .mat-checkbox-layout {
      .mat-checkbox-inner-container {
        .mat-checkbox-frame {
          opacity: 0.26;
        }
        .mat-checkbox-checkmark-path {
          background: #000;
          stroke: #000 !important;
          opacity: 0.26;
        }
      }
      .mat-checkbox-label {
        color: inherit;
      }
    }
  }
}

.example-margin {
  margin: 0 10px;
}
